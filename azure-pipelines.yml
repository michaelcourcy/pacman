# Pacman pipeline

# Build and push the pacman image 
# deploy with helm on your kubernetes cluster 

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: mcourcy-dockerhub
  registry: docker.io
  registry_user: michaelcourcy
  registry_repository: pacman
  kubernetesServiceEndpoint: mcourcy-cluster
  ingress: pacman.mcourcy.dev.azure.kasten.io

steps:
- task: ContainerBuild@0
  displayName: "build pacman image"
  inputs:
    dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
    repository: $(registry_user)/$(registry_repository)
    Dockerfile: 'Dockerfile'
    tag: $(Build.BuildId)

- task: HelmDeploy@0
  displayName: create backup job
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: $(kubernetesServiceEndpoint)
    namespace: 'pacman'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: 'charts/backupaction'
    releaseName: 'pacback'
    overrideValues: 'kastenRelease=kasten-io'
    arguments: --wait-for-jobs --timeout=120s


 
- task: HelmDeploy@0
  displayName: remove backup job
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: $(kubernetesServiceEndpoint)
    namespace: 'pacman'
    command: 'delete'    
    releaseName: 'pacback'     

- task: HelmDeploy@0
  displayName: deploy pacman
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: $(kubernetesServiceEndpoint)
    namespace: 'pacman'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: 'charts/pacman'
    releaseName: 'pacman'
    overrideValues: 'ingress.create=true,ingress.class=nginx,ingress.host=$(ingress),pacman.image.registry=$(registry),pacman.image.repository=$(registry_user),pacman.image.image=$(registry_repository),pacman.image.tag=$(Build.BuildId)'

