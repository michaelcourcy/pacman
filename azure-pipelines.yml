# Pacman pipeline

# Build and push the pacman image 
# deploy with helm on your kubernetes cluster 

# If you use with a serviceaccout connection 
# this service account must be granted the permission to create 
# a temporary backupaction service account inside the namespace
# a rolebinding between the temporary backupaction service account and the k10-basic clusterrole inside the namespace 
# Assuming that the name of the serviceaccout connection is devops create the following role and rolebinding
# in the namespace 
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:   
#   name: role-for-devops
#   namespace: <your namespace>     
# rules:
# - apiGroups:
#   - '*'
#   - apps
#   - extensions
#   - rbac.authorization.k8s.io
#   resources:
#   - '*'
#   verbs:
#   - '*'
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: rolebinding-for-devops
#   namespace: <your namespace>   
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: role-for-devops
# subjects:
# - kind: ServiceAccount
#   name: devops
#   namespace: <your namespace>
#
#
# Create now a service account kubernetes service connection 
# kubectl config view --minify -o jsonpath={.clusters[0].cluster.server}
# https://api.se-lab-aro-prod-2.dev.azure.kasten.io:6443
# kubectl get secret |grep devops-token | awk '{print $1}'
# devops-token-hwwgx
# kubectl get secret devops-token-hwwgx -o json


trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: mcourcy-dockerhub
  registry: docker.io
  registry_user: michaelcourcy
  registry_repository: pacman
  kubernetesServiceEndpoint: se-lab-2
  ingress: pacman.mcourcy.dev.azure.kasten.io

steps:
- task: ContainerBuild@0
  displayName: "build pacman image"
  inputs:
    dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
    repository: $(registry_user)/$(registry_repository)
    Dockerfile: 'Dockerfile'
    tag: $(Build.BuildId)

- task: HelmDeploy@0
  displayName: create backup job
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: $(kubernetesServiceEndpoint)
    namespace: 'pacman'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: 'charts/backupaction'
    releaseName: 'pacback'
    overrideValues: 'kastenRelease=kasten-io'
    arguments: --wait-for-jobs --timeout=120s

- task: HelmDeploy@0
  displayName: remove backup job
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: $(kubernetesServiceEndpoint)
    namespace: 'pacman'
    command: 'delete'
    chartType: 'Name'    
    # releaseName is ignored when the command is delete 
    # https://github.com/microsoft/azure-pipelines-tasks/issues/18290
    releaseName: 'pacback'    
    arguments: pacback

- task: HelmDeploy@0
  displayName: deploy pacman
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: $(kubernetesServiceEndpoint)
    namespace: 'pacman'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: 'charts/pacman'
    releaseName: 'pacman'
    overrideValues: 'route.create=true,pacman.image.registry=$(registry),pacman.image.repository=$(registry_user),pacman.image.image=$(registry_repository),pacman.image.tag=$(Build.BuildId)'

